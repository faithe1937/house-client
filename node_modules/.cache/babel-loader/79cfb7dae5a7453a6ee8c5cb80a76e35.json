{"ast":null,"code":"var _jsxFileName = \"/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/src/components/SignUp.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password,\n            password_confirmation = _this$state.password_confirmation,\n            firstname = _this$state.firstname,\n            lastname = _this$state.lastname;\n      let user = {\n        email: email,\n        password: password,\n        password_confirmation: password_confirmation,\n        firstname: firstname,\n        lastname: lastname\n      };\n      console.log(user);\n      axios.post(\"http://localhost:3001/users\", {\n        user\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.status === \"created\") {\n          this.props.handleLogin(response.data);\n          this.redirect();\n        } else {\n          this.setState({\n            errors: response.data.errors\n          });\n        }\n      }).catch(error => console.log(\"api errors:\", error));\n    };\n\n    this.redirect = () => {\n      this.props.history.push(\"/\");\n    };\n\n    this.handleErrors = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.errors.map(error => {\n        return React.createElement(\"li\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, error);\n      })));\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      errors: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          password_confirmation = _this$state2.password_confirmation,\n          firstname = _this$state2.firstname,\n          lastname = _this$state2.lastname;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form, {\n      widths: \"equal\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      // fluid label='email'\n      fluid: true,\n      placeholder: \"email\",\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      // fluid label='password'\n      fluid: true,\n      placeholder: \"password\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      // fluid label='password'\n      fluid: true,\n      placeholder: \"password confirmation\",\n      type: \"password\",\n      name: \"password_confirmation\",\n      value: password_confirmation,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      // fluid label='password'\n      fluid: true,\n      placeholder: \"firstname\",\n      type: \"text\",\n      name: \"firstname\",\n      value: firstname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      // fluid label='password'\n      fluid: true,\n      placeholder: \"lastname\",\n      type: \"text\",\n      name: \"lastname\",\n      value: lastname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Button, {\n      placeholder: \"submit\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Sign Up\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.errors ? this.handleErrors() : null));\n  }\n\n}\n\nexport default SignUp; // import React, { useState } from \"react\";\n// import { Button, Form, Grid, Header, Imlastname, Segment } from \"semantic-ui-react\";\n// const SignUp = props => {\n//   const [firstname, setFirstName] = useState(\"\");\n//   const [lastname, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const handleFirstNameChange = event => {\n//     setFirstName(event.target.value);\n//   };\n//   const handleLastNameChange = event => {\n//     setLastName(event.target.value);\n//   };\n//   const handleEmailChange = event => {\n//     setEmail(event.target.value);\n//   };\n//   const handlePasswordChange = event => {\n//     setPassword(event.target.value);\n//   };\n//   const postNewUser = event => {\n//     event.preventDefault();\n//     fetch(`http://localhost:3001/users`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         firstname,\n//         lastname,\n//         email,\n//         password\n//       })\n//     })\n//       .then(resp => resp.json())\n//       .then(data => setCurrentUser(data));\n//     // localStorlastname.setItem(\"token\", data.jwt);\n//     // props.handleLogin(data.user);\n//   };\n//   const [user, setCurrentUser] = useState({});\n//   console.log(user);\n//   return (\n//     <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n//       <Grid.Column style={{ maxWidth: 450 }}>\n//         <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n//           <Imlastname src=\"/logo.png\" /> Create an account\n//         </Header>\n//         <Form size=\"large\" onSubmit={postNewUser}>\n//           <Segment stacked>\n//             <Form.Input\n//               fluid\n//               icon=\"user\"\n//               iconPosition=\"left\"\n//               placeholder=\"First Name\"\n//               type=\"text\"\n//               value={firstname}\n//               onChange={handleFirstNameChange}\n//             />\n//             <Form.Input\n//               fluid\n//               icon=\"user\"\n//               iconPosition=\"left\"\n//               placeholder=\"Last Name\"\n//               type=\"text\"\n//               value={lastname}\n//               onChange={handleLastNameChange}\n//             />\n//             <Form.Input\n//               fluid\n//               icon=\"user\"\n//               iconPosition=\"left\"\n//               placeholder=\"E-mail address\"\n//               type=\"text\"\n//               value={email}\n//               onChange={handleEmailChange}\n//             />\n//             <Form.Input\n//               fluid\n//               icon=\"lock\"\n//               iconPosition=\"left\"\n//               placeholder=\"Password\"\n//               type=\"password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//             />\n//             {/* <Form.Input\n//               fluid\n//               icon=\"lock\"\n//               iconPosition=\"left\"\n//               placeholder=\"Password Confirmation\"\n//               type=\"password_confirmation\"\n//             /> */}\n//             <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n//               Login\n//             </Button>\n//           </Segment>\n//         </Form>\n//       </Grid.Column>\n//     </Grid>\n//   );\n// };\n// export default SignUp;","map":{"version":3,"sources":["/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/src/components/SignUp.js"],"names":["React","Component","Form","Button","Segment","axios","SignUp","constructor","props","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","state","email","password","password_confirmation","firstname","lastname","user","console","log","post","withCredentials","then","response","data","status","handleLogin","redirect","errors","catch","error","history","push","handleErrors","map","render"],"mappings":"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":["import React, { Component } from \"react\";\nimport { Form, Button, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      errors: \"\"\n    };\n  }\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const {\n      email,\n      password,\n      password_confirmation,\n      firstname,\n      lastname\n    } = this.state;\n    let user = {\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n      firstname: firstname,\n      lastname: lastname\n    };\n\n    console.log(user);\n\n    axios\n      .post(\"http://localhost:3001/users\", { user }, { withCredentials: true })\n      .then(response => {\n        if (response.data.status === \"created\") {\n          this.props.handleLogin(response.data);\n          this.redirect();\n        } else {\n          this.setState({\n            errors: response.data.errors\n          });\n        }\n      })\n      .catch(error => console.log(\"api errors:\", error));\n  };\n\n  redirect = () => {\n    this.props.history.push(\"/\");\n  };\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>\n          {this.state.errors.map(error => {\n            return <li key={error}>{error}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      email,\n      password,\n      password_confirmation,\n      firstname,\n      lastname\n    } = this.state;\n\n    return (\n      <div>\n        <Form widths=\"equal\" onSubmit={this.handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              // fluid label='email'\n              fluid\n              placeholder=\"email\"\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n\n            <Form.Input\n              // fluid label='password'\n              fluid\n              placeholder=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n\n            <Form.Input\n              // fluid label='password'\n              fluid\n              placeholder=\"password confirmation\"\n              type=\"password\"\n              name=\"password_confirmation\"\n              value={password_confirmation}\n              onChange={this.handleChange}\n            />\n\n            <Form.Input\n              // fluid label='password'\n              fluid\n              placeholder=\"firstname\"\n              type=\"text\"\n              name=\"firstname\"\n              value={firstname}\n              onChange={this.handleChange}\n            />\n\n            <Form.Input\n              // fluid label='password'\n              fluid\n              placeholder=\"lastname\"\n              type=\"text\"\n              name=\"lastname\"\n              value={lastname}\n              onChange={this.handleChange}\n            />\n\n            <Button placeholder=\"submit\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Segment>\n        </Form>\n\n        <div>{this.state.errors ? this.handleErrors() : null}</div>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n\n// import React, { useState } from \"react\";\n// import { Button, Form, Grid, Header, Imlastname, Segment } from \"semantic-ui-react\";\n\n// const SignUp = props => {\n//   const [firstname, setFirstName] = useState(\"\");\n//   const [lastname, setLastName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleFirstNameChange = event => {\n//     setFirstName(event.target.value);\n//   };\n\n//   const handleLastNameChange = event => {\n//     setLastName(event.target.value);\n//   };\n\n//   const handleEmailChange = event => {\n//     setEmail(event.target.value);\n//   };\n\n//   const handlePasswordChange = event => {\n//     setPassword(event.target.value);\n//   };\n\n//   const postNewUser = event => {\n//     event.preventDefault();\n//     fetch(`http://localhost:3001/users`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         firstname,\n//         lastname,\n//         email,\n//         password\n//       })\n//     })\n//       .then(resp => resp.json())\n//       .then(data => setCurrentUser(data));\n//     // localStorlastname.setItem(\"token\", data.jwt);\n//     // props.handleLogin(data.user);\n//   };\n//   const [user, setCurrentUser] = useState({});\n//   console.log(user);\n\n//   return (\n//     <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n//       <Grid.Column style={{ maxWidth: 450 }}>\n//         <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n//           <Imlastname src=\"/logo.png\" /> Create an account\n//         </Header>\n\n//         <Form size=\"large\" onSubmit={postNewUser}>\n//           <Segment stacked>\n//             <Form.Input\n//               fluid\n//               icon=\"user\"\n//               iconPosition=\"left\"\n//               placeholder=\"First Name\"\n//               type=\"text\"\n//               value={firstname}\n//               onChange={handleFirstNameChange}\n//             />\n\n//             <Form.Input\n//               fluid\n//               icon=\"user\"\n//               iconPosition=\"left\"\n//               placeholder=\"Last Name\"\n//               type=\"text\"\n//               value={lastname}\n//               onChange={handleLastNameChange}\n//             />\n//             <Form.Input\n//               fluid\n//               icon=\"user\"\n//               iconPosition=\"left\"\n//               placeholder=\"E-mail address\"\n//               type=\"text\"\n//               value={email}\n//               onChange={handleEmailChange}\n//             />\n//             <Form.Input\n//               fluid\n//               icon=\"lock\"\n//               iconPosition=\"left\"\n//               placeholder=\"Password\"\n//               type=\"password\"\n//               value={password}\n//               onChange={handlePasswordChange}\n//             />\n//             {/* <Form.Input\n//               fluid\n//               icon=\"lock\"\n//               iconPosition=\"left\"\n//               placeholder=\"Password Confirmation\"\n//               type=\"password_confirmation\"\n//             /> */}\n\n//             <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n//               Login\n//             </Button>\n//           </Segment>\n//         </Form>\n//       </Grid.Column>\n//     </Grid>\n//   );\n// };\n// export default SignUp;\n"]},"metadata":{},"sourceType":"module"}