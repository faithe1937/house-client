{"ast":null,"code":"import _slicedToArray from \"/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/src/components/SignUp.js\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport axios from \"axios\";\nimport useForm from \"./useForm\";\nimport { Form, Message } from \"semantic-ui-react\";\n\nconst SignUp = () => {\n  const _useForm = useForm(signUp),\n        values = _useForm.values,\n        handleChange = _useForm.handleChange,\n        handleSubmit = _useForm.handleSubmit;\n\n  const _useContext = useContext(UserContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        user = _useContext2[0],\n        setUser = _useContext2[1];\n\n  function signUp() {\n    setUser(values);\n    console.log(user);\n  }\n\n  const userSignupFetch = user => {\n    return async () => {\n      const resp = await fetch(\"http://localhost:3001/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user\n        })\n      });\n      const data = await resp.json();\n\n      if (data.message) {// Here you should have logic to handle invalid creation of a user.\n        // This assumes your Rails API will return a JSON object with a key of\n        // 'message' if there is an error with creating the user, i.e. invalid username\n      } else {\n        localStorage.setItem(\"token\", data.jwt); // dispatch(loginUser(data.user))\n        // dispatch(signIn())\n      }\n    };\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Message, {\n    attached: true,\n    header: \"Welcome to our site!\",\n    content: \"Fill out the form below to sign-up for a new account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Form, {\n    className: \"attached fluid segment\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    placeholder: \"First Name\",\n    name: \"firstname\",\n    value: values.firstname,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    placeholder: \"Last Name\",\n    name: \"lastname\",\n    value: values.lastname,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    placeholder: \"Email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    placeholder: \"Password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Form.Checkbox, {\n    inline: true,\n    label: \"I agree to the terms and conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Form.Button, {\n    color: \"teal\",\n    content: \"Submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/src/components/SignUp.js"],"names":["React","useContext","UserContext","axios","useForm","Form","Message","SignUp","signUp","values","handleChange","handleSubmit","user","setUser","console","log","userSignupFetch","resp","fetch","method","headers","Accept","body","JSON","stringify","data","json","message","localStorage","setItem","jwt","firstname","lastname","email","password"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport axios from \"axios\";\nimport useForm from \"./useForm\";\nimport { Form, Message } from \"semantic-ui-react\";\n\nconst SignUp = () => {\n  const { values, handleChange, handleSubmit } = useForm(signUp);\n  const [user, setUser] = useContext(UserContext);\n\n  function signUp() {\n    setUser(values);\n    console.log(user);\n  }\n  const userSignupFetch = user => {\n    return async () => {\n      const resp = await fetch(\"http://localhost:3001/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({ user })\n      });\n      const data = await resp.json();\n      if (data.message) {\n        // Here you should have logic to handle invalid creation of a user.\n        // This assumes your Rails API will return a JSON object with a key of\n        // 'message' if there is an error with creating the user, i.e. invalid username\n      } else {\n        localStorage.setItem(\"token\", data.jwt);\n        // dispatch(loginUser(data.user))\n        // dispatch(signIn())\n      }\n    };\n  };\n\n  return (\n    <div>\n      <Message\n        attached\n        header=\"Welcome to our site!\"\n        content=\"Fill out the form below to sign-up for a new account\"\n      />\n      <Form className=\"attached fluid segment\" onSubmit={handleSubmit}>\n        <Form.Group widths=\"equal\"></Form.Group>\n        <Form.Group>\n          <Form.Input\n            placeholder=\"First Name\"\n            name=\"firstname\"\n            value={values.firstname}\n            onChange={handleChange}\n          />\n          <Form.Input\n            placeholder=\"Last Name\"\n            name=\"lastname\"\n            value={values.lastname}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            placeholder=\"Email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          <Form.Input\n            placeholder=\"Password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Checkbox inline label=\"I agree to the terms and conditions\" />\n        <Form.Button color=\"teal\" content=\"Submit\" type=\"submit\" />\n      </Form>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}