{"ast":null,"code":"import _slicedToArray from \"/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/src/components/SignUp.js\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Grid, Header, Message, Segment // Icon\n} from \"semantic-ui-react\";\nimport \"./Signup.css\";\nexport default function Signup(props) {\n  const _useFormFields = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  }),\n        _useFormFields2 = _slicedToArray(_useFormFields, 2),\n        fields = _useFormFields2[0],\n        handleFieldChange = _useFormFields2[1];\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        newUser = _useState2[0],\n        setNewUser = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  } // function validateConfirmationForm() {\n  //   return fields.confirmationCode.length > 0;\n  // }\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n    setNewUser(\"test\");\n    setIsLoading(false);\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n  }\n\n  function renderConfirmationForm() {\n    return React.createElement(Form, {\n      onSubmit: handleConfirmationSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"autoFocus type=\\\"tel\\\" onChange=\", handleFieldChange, \"/>\"), React.createElement(Button, {\n      type: \"submit\",\n      isLoading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Verify\"));\n  }\n\n  function renderForm() {\n    return React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"autoFocus type=\\\"email\\\" value=\", fields.email, \"onChange=\", handleFieldChange), React.createElement(Form.Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"type=\\\"password\\\" value=\", fields.password, \"onChange=\", handleFieldChange), React.createElement(Form.Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"type=\\\"password\\\" onChange=\", handleFieldChange), React.createElement(Button, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Signup\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, newUser === null ? renderForm() : renderConfirmationForm());\n}","map":{"version":3,"sources":["/Users/faithe1937/Desktop/flatiron/projects/mod5/reactnewnew/src/components/SignUp.js"],"names":["React","useState","Button","Form","Grid","Header","Message","Segment","Signup","props","useFormFields","email","password","confirmPassword","confirmationCode","fields","handleFieldChange","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","handleSubmit","event","preventDefault","handleConfirmationSubmit","renderConfirmationForm","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n  // Icon\n} from \"semantic-ui-react\";\nimport \"./Signup.css\";\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  // function validateConfirmationForm() {\n  //   return fields.confirmationCode.length > 0;\n  // }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    setNewUser(\"test\");\n\n    setIsLoading(false);\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <Form onSubmit={handleConfirmationSubmit}>\n        <Form.Input>\n          autoFocus type=\"tel\" onChange={handleFieldChange}\n          />\n        </Form.Input>\n        <Button type=\"submit\" isLoading={isLoading}>\n          Verify\n        </Button>\n      </Form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Input>\n          autoFocus type=\"email\" value={fields.email}\n          onChange={handleFieldChange}\n        </Form.Input>\n\n        <Form.Input>\n          type=\"password\" value={fields.password}\n          onChange={handleFieldChange}\n        </Form.Input>\n\n        <Form.Input>type=\"password\" onChange={handleFieldChange}</Form.Input>\n\n        <Button\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </Button>\n      </Form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}